% pygmentex.sty

\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{pygmentex}[2014/07/27 v0.7 A Pygmentex layer for LaTeX]

\RequirePackage{fancyvrb}
\RequirePackage{color}
\RequirePackage{ifthen}
%\RequirePackage[font=small,format=plain,labelfont=bf,up,textfont=it,up]{caption}
\RequirePackage{caption}
\RequirePackage{pgfkeys}
\RequirePackage{efbox}
\RequirePackage[framemethod=tikz]{mdframed}

%\DeclareCaptionType[within=chapter]{code}[Listagem][Lista de listagens]
\DeclareCaptionType{code}[Listagem][Lista de listagens]
\captionsetup[code]{position=top}

% =========================================================
% Auxiliary:
%   finding the widest string in a comma
%   separated list of strings delimited by parenthesis
% =========================================================

% arguments:
% #1) text: a comma separeted list of strings
% #2) formatter: a macro to format each string
% #3) dimension: will hold the result

\def\widest(#1)#2#3{%
  \begingroup
  \def\widest@end{\widest@end}%
  \def\widest@helper##1,{%
    \ifx\widest@end##1\relax
    \else
      \settowidth\dimen@{#2{##1}}%
      \ifdim#3<\dimen@
        \global#3=\dimen@
      \else
      \fi
      \expandafter\widest@helper
    \fi
  }%
  \widest@helper#1,\widest@end,%
  \endgroup
}


% =========================================================
% fancyvrb new commands to append to a file
% =========================================================

% See http://tex.stackexchange.com/questions/47462/inputenc-error-with-unicode-chars-and-verbatim
\long\def\unexpanded@write#1#2{\write#1{\unexpanded{#2}}}

\def\VerbatimOutAppend{\FV@Environment{}{VerbatimOutAppend}}

\def\FVB@VerbatimOutAppend#1{%
  \@bsphack
  \begingroup
    \FV@UseKeyValues
    \FV@DefineWhiteSpace
    \def\FV@Space{\space}%
    \FV@DefineTabOut
    \def\FV@ProcessLine{\immediate\unexpanded@write#1}%
    \let\FV@FontScanPrep\relax
    \let\@noligs\relax
    \FV@Scan
}

\def\FVE@VerbatimOutAppend{%
  \endgroup
  \@esphack
}

\DefineVerbatimEnvironment{VerbatimOutAppend}{VerbatimOutAppend}{}


% =========================================================
% Some macros to help handling pgfkeys options
% =========================================================

% \push{\macroname}{value}
%
% This will (re)define "\macroname" so that "value" is added
% to the end of its current expansion.
%
\newcommand*\push[2]{%
  % This assumes e-TeX
  \ifx\@empty#1\@empty
    \def#1{#2}%
  \else
    \edef#1{%
      \unexpanded\expandafter{#1},%
      \unexpanded{#2}}%
  \fi
}

\newcommand*\pgfkeys@unknown@handler[2]{%
  % #1 => macro to hold the unknown options
  % #2 => option value
  \edef\key@value{%
    \pgfkeyscurrentname\ifx#2\pgfkeysnovalue\else=\unexpanded{#2}\fi
  }%
  \expandafter\push\expandafter#1\expandafter{\key@value}%
}

\newcommand*\pgfqkeysfiltered@with@saved@options[3]{%
  % #1 => path
  % #2 => macro holding saved options
  % #3 => keys
  \def\@pgfqkeysfiltered@##1{\pgfqkeysfiltered{#1}{##1}}%
  \expandafter\@pgfqkeysfiltered@\expandafter{#2,#3}%
}

\newcommand*\call@with@saved@options[3]{%
  % #1 => macro to be called
  % #2 => macro holding saved options
  % #3 => aditional options
  \expandafter#1\expandafter[#2,#3]%
}

% =========================================================
% Main options
% =========================================================

\newif\ifpygmented@opt@texcl
\newif\ifpygmented@opt@mathescape
\newif\ifpygmented@opt@linenos
\newif\ifpygmented@opt@numbers
\newif\ifpygmented@left
\newif\ifpygmented@right

\pgfkeys{%
  /pygmented/.cd,
  %
  % .unknown/.code          = {\pgfkeys@unknown@handler{\pygmented@unknown}{#1}},
  %
  lang/.store in          = \pygmented@opt@lang,
  style/.store in         = \pygmented@opt@style,
  escapeinside/.store in  = \pygmented@opt@escapeinside,
  texcl/.is if            = pygmented@opt@texcl,
  mathescape/.is if       = pygmented@opt@mathescape,
  linenos/.is if          = pygmented@opt@linenos,
  linenostart/.store in   = \pygmented@opt@linenostart,
  linenostep/.store in    = \pygmented@opt@linenostep,
  gobble/.store in        = \pygmented@opt@gobble,
  numbers/.is if          = pygmented@opt@numbers,
  firstnumber/.store in   = \pygmented@opt@firstnumber,
  stepnumber/.store in    = \pygmented@opt@stepnumber,
  numbersep/.store in     = \pygmented@opt@numbersep,
  font/.store in          = \pygmented@opt@font,
  framesep/.store in      = \pygmented@opt@framesep,
  framerule/.store in     = \pygmented@opt@framerule,
  firstline/.store in     = \pygmented@opt@firstline,
  lastline/.store in      = \pygmented@opt@lastline,
  tabsize/.store in       = \pygmented@opt@tabsize,
  frame/.is choice,
  frame/none/.code        = {\def\pygmented@opt@frame{none}\pygmented@leftfalse\pygmented@rightfalse},
  frame/lines/.code       = {\def\pygmented@opt@frame{lines}\pygmented@leftfalse\pygmented@rightfalse},
  frame/single/.code      = {\def\pygmented@opt@frame{single}\pygmented@lefttrue\pygmented@righttrue},
  boxing method/.store in = \pygmented@opt@boxing@method,
  label/.store in         = \pygmented@opt@label,
  caption/.store in       = \pygmented@opt@caption,
  %
  colback/.store in       = \pygmented@opt@colback,
  %
  texcl/.default          = true,
  mathescape/.default     = true,
  linenos/.default        = true,
  numbers/.default        = true,
  frame/.default          = single,
}


\pgfqkeys{/pygmented}{
  style         = default,
  framerule     = \fboxrule,
  framesep      = \fboxsep,
  linenos       = false,
  numbersep     = 2pt,
  font          = \ttfamily,
  frame         = none,
  tabsize       = 8,
  boxing method = mdframed,
}

% \pygmented@define@switch{extra}{numberblanklines}
% \pygmented@define@switch{extra}{showspaces}
% \pygmented@define@switch{extra}{resetmargins}
% \pygmented@define@switch{extra}{samepage}
% \pygmented@define@switch{extra}{showtabs}
% \pygmented@define@switch{extra}{obeytabs}


% =========================================================
% pygmented commands and environments
% =========================================================

\newwrite\pygmented@outfile

\newcount\pygmented@counter

\newcommand\inputpygmented[2][]{%
  \begingroup
    \pgfkeys{%
      /pgf/key filters/defined/.install key filter,
      /pgf/key filter handlers/append filtered to/.install key filter handler=\remainingoptions
    }%
    \def\remainingoptions{}%
    \pgfqkeysfiltered@with@saved@options{/pygmented}{\pygmented@global@options}{#1}%
    % 
    \immediate\write\pygmented@outfile{<@@pygmented@input@\the\pygmented@counter}%
    \immediate\write\pygmented@outfile{\detokenize\expandafter{\pygmented@global@options},\detokenize{#1}}%
    \immediate\write\pygmented@outfile{#2}%
    \immediate\write\pygmented@outfile{>@@pygmented@input@\the\pygmented@counter}%
    %
    \csname pygmented@snippet@\the\pygmented@counter\endcsname%
    \global\advance\pygmented@counter by 1\relax
  \endgroup
}

\newenvironment{pygmented}[1][]{%
  \pgfkeys{%
    /pgf/key filters/defined/.install key filter,
    /pgf/key filter handlers/append filtered to/.install key filter handler=\remainingoptions
  }%
  \def\remainingoptions{}%
  \pgfqkeysfiltered@with@saved@options{/pygmented}{\pygmented@global@options}{#1}%
  \typeout{}\typeout{\string\pygmented@global@options:}\typeout{\meaning\pygmented@global@options}%%%%%%% DEBUGING
  \typeout{\string\remainingoptions:}\typeout{\meaning\remainingoptions}%%%%%%% DEBUGING
  % 
  \fvset{tabsize=\pygmented@opt@tabsize}%
  \immediate\write\pygmented@outfile{<@@pygmented@display@\the\pygmented@counter}%
  \immediate\write\pygmented@outfile{\detokenize\expandafter{\pygmented@global@options},\detokenize{#1}}%
  \VerbatimEnvironment
  \begin{VerbatimOutAppend}{\pygmented@outfile}%
}{%
  \end{VerbatimOutAppend}%
  \immediate\write\pygmented@outfile{>@@pygmented@display@\the\pygmented@counter}%
  \csname pygmented@snippet@\the\pygmented@counter\endcsname
  \global\advance\pygmented@counter by 1\relax
}

\newcommand\pyginline[2][]{%
  \begingroup
    \pgfkeys{%
      /pgf/key filters/defined/.install key filter,
      /pgf/key filter handlers/append filtered to/.install key filter handler=\remainingoptions
    }%
    \def\remainingoptions{}%
    \pgfqkeysfiltered@with@saved@options{/pygmented}{\pygmented@global@options}{#1}%
    \typeout{}\typeout{\string\pygmented@global@options:}\typeout{\meaning\pygmented@global@options}%%%%%%% DEBUGING
    \typeout{\string\remainingoptions:}\typeout{\meaning\remainingoptions}%%%%%%% DEBUGING
    % 
    \immediate\write\pygmented@outfile{<@@pygmented@inline@\the\pygmented@counter}%
    \immediate\write\pygmented@outfile{\detokenize\expandafter{\pygmented@global@options},\detokenize{#1}}%
    \DefineShortVerb{#2}%
    \SaveVerb
      [aftersave={%
       \UndefineShortVerb{#2}%
       \immediate\write\pygmented@outfile{\FV@SV@pygmented@verb}%
       \immediate\write\pygmented@outfile{>@@pygmented@inline@\the\pygmented@counter}%
       %
       \csname pygmented@snippet@\the\pygmented@counter\endcsname
       \global\advance\pygmented@counter by 1\relax
       \endgroup
      }]%
      {pygmented@verb}#2%
}


% Macro to typeset an already pygmented snippet of code.
% It is created by the pygmentex program.
%
% #1 => macro to further typeset the snippet body
% #2 => snippet body
%
\newcommand\pygmented@snippet@inlined[1]{%
  \begingroup
  \csname PYstyle\pygmented@opt@style\endcsname
  \pygmented@opt@font
  \edef\pygmented@saved@{%
    \ifcsname pygmented@opt@colback\endcsname
      backgroundcolor=\pygmented@opt@colback,%
      % colback=\pygmented@opt@colback,%
    \fi
    % nobeforeafter,%
    % tcbox raise base,%
    % left=0mm,%
    % right=0mm,%
    % top=0mm,%
    % bottom=0mm,%
    % boxsep=2pt,%
    % arc=1pt,%
    % boxrule=0pt,%
    \unexpanded\expandafter{\remainingoptions},%
  }%
  \expandafter\efbox\expandafter[\pygmented@saved@]{#1}%
  % \expandafter\tcbox\expandafter[\pygmented@saved@]{#1}%
  \endgroup
}

\newenvironment{pygmented@snippet@framed}{%
  \begingroup
  \pygmented@leftmargin\z@
  \ifpygmented@opt@linenos
    \expandafter\widest\pygmented@alllinenos{\FormatLineNumber}{\pygmented@leftmargin}%
    \advance\pygmented@leftmargin\pygmented@opt@numbersep
  \fi
  %
  \ifdefined\pygmented@opt@label
    \def\pygmented@title{%
      \captionof{code}{\label{\pygmented@opt@label}\pygmented@opt@caption}%
      \vskip -0.7\baselineskip}%
  \else
    \ifdefined\pygmented@opt@caption
      \def\pygmented@title{%
        \captionof{code}{\pygmented@opt@caption}%
        \vskip -0.7\baselineskip}%
    \fi
  \fi
  \ifdefined\pygmented@title
    \pygmented@title
  \fi
  %
  \edef\pygmented@saved@{%
    \ifcsname pygmented@\pygmented@opt@boxing@method @additional@options\endcsname
      \csname pygmented@\pygmented@opt@boxing@method @additional@options\endcsname,%
    \fi
    \unexpanded\expandafter{\remainingoptions},%
  }%
  \typeout{\string\pygmented@saved@:}\typeout{\meaning\pygmented@saved@}%%%%%%% DEBUGING
  \expandafter\begin\expandafter{\expandafter\pygmented@opt@boxing@method\expandafter}\expandafter[%
    \pygmented@saved@
    ]%
  \csname PYstyle\pygmented@opt@style\endcsname
  \pygmented@opt@font
  % 
  \noindent
  }{%
  \end{\pygmented@opt@boxing@method}%
  \endgroup
}


\newcommand\pygmented@inlined[1]{%
  \expandafter\efbox\expandafter[\remainingoptions]{#1}%
}



\def\FormatLineNumber#1{{\rmfamily\tiny#1}}


\newdimen\pygmented@leftmargin
\newdimen\pygmented@linenosep

\def\pygmented@lineno@do#1{%
  \pygmented@linenosep 0pt%
  \csname pygmented@\pygmented@opt@boxing@method @margin\endcsname
  \advance \pygmented@linenosep \pygmented@opt@numbersep
  \makebox[0pt][r]{%
    \FormatLineNumber{#1}%
    \hspace*{\pygmented@linenosep}}
}

% \newenvironment{pygmented@boxing}{%
%   \expandafter\begin\expandafter{\expandafter\pygmented@opt@boxing@method\expandafter}\expandafter[\remainingoptions]%
%   }{%
%   \end{\pygmented@opt@boxing@method}%
% }%


\newcommand\pygmented@mdframed@additional@options{%
  roundcorner=5pt,%
  leftmargin=\pygmented@leftmargin,%
  \ifcsname pygmented@opt@colback\endcsname
    backgroundcolor=\pygmented@opt@colback,%
  \fi
  frametitlerule=true,%
}

\newcommand\pygmented@tcolorbox@additional@options{%
  arc=5pt,%
  grow to left by=-\pygmented@leftmargin,%
  \ifcsname pygmented@opt@colback\endcsname
    colback=\pygmented@opt@colback,%
  \fi
}

\newcommand\pygmented@boite@additional@options{%
  arc=5pt,%
  leftmargin=\pygmented@leftmargin,%
  \ifcsname pygmented@opt@colback\endcsname
    colback=\pygmented@opt@colback,%
  \fi
}


\newcommand\pygmented@mdframed@margin{%
  \advance \pygmented@linenosep \mdflength{outerlinewidth}%
  \advance \pygmented@linenosep \mdflength{middlelinewidth}%
  \advance \pygmented@linenosep \mdflength{innerlinewidth}%
  \advance \pygmented@linenosep \mdflength{innerleftmargin}%
}

\newcommand\pygmented@tcolorbox@margin{%
  \advance \pygmented@linenosep \kvtcb@left@rule
  \advance \pygmented@linenosep \kvtcb@leftupper
  \advance \pygmented@linenosep \kvtcb@boxsep
}

\newcommand\pygmented@boite@margin{%
  \advance \pygmented@linenosep \boite@leftrule
  \advance \pygmented@linenosep \boite@boxsep
}

\def\pygmented@global@options{}

\newcommand\setpygmented[1]{%
  \def\pygmented@global@options{#1}%
}


% =========================================================
% final actions
% =========================================================

\AtEndOfPackage{%
  \IfFileExists{\jobname.pygmented}{%
    \input{\jobname.pygmented}%
  }{%
    \PackageWarning{pygmentex}{File `\jobname.pygmented' not found.}%
  }%
  \immediate\openout\pygmented@outfile\jobname.snippets%
}

\AtEndDocument{%
  \closeout\pygmented@outfile%
}

\endinput
